<#+
// <copyright file="IEntityServiceTemplate.tt" company="QuickFramework">
//  Copyright ©QuickFramework. All Rights Reserved.
// </copyright>

public class IEntityServiceTemplate : CSharpTemplate
{
    private T4ModelInfo _model;
        
    public IEntityServiceTemplate(T4ModelInfo model)
    {
        _model = model;
    }

    /// <summary>
    /// 获取 生成的文件名，根据模型名定义
    /// </summary>
    public string FileName
    {
        get
        { 
            return string.Format("I{0}Service.cs", _model.Name);
        }
    }

	public override string TransformText()
	{
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
// <copyright file="I<#= _model.Name #>Service.generated.cs">
//		Copyright(c)2016 QuickFramework.All rights reserved.
//		开发组织：QuickFramework
//		公司网站：QuickFramework
//		所属工程：Ecomm.Core.Service
//		生成时间：<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm") #>
// </copyright>
//------------------------------------------------------------------------------
using System;
using System.Linq;

using Quick.Framework.Tool;
using Ecomm.Core.Repository<#= _model.UseModuleDir ? "." + _model.ModuleName : null #>;
using Ecomm.Domain.Models<#= _model.UseModuleDir ? "." + _model.ModuleName : null #>;
using Ecomm.Site.Models<#= _model.UseModuleDir ? "." + _model.ModuleName : null #>.<#= _model.Name #>;
using System.Collections.Generic;
using Quick.Site.Common.Models;

namespace Ecomm.Core.Service<#= _model.UseModuleDir ? "." + _model.ModuleName : null #>
{
	/// <summary>
    /// 服务层接口 —— I<#= _model.Name #>Service
    /// </summary>
    public interface I<#= _model.Name #>Service
    {
		#region 属性

        IQueryable<<#= _model.Name #>> <#= _model.Name #>s { get; }

        #endregion

        #region 公共方法
        OperationResult Insert(<#= _model.Name #>Model model);

        OperationResult Update(<#= _model.Name #>Model model);

        /// <summary>
        /// 逻辑删除
        /// </summary>
        /// <param name="Id"></param>
        /// <returns></returns>
        OperationResult Delete(int Id);

        #endregion
	}
}
<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>