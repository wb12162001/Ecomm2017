//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
// <copyright file="OperateLogService.cs">
//		Copyright(c)2013 QuickFramework.All rights reserved.
//		开发组织：QuickFramework
//		公司网站：QuickFramework
//		所属工程：Ecomm.Core.Service
//		生成时间：2013-12-11 23:55
// </copyright>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel.Composition;
using System.Linq;

using Ecomm.Site.Models.SysConfig.OperateLog;
using Ecomm.Core.Repository.SysConfig;
using Ecomm.Site.Models.SysConfig;
using Quick.Framework.Tool;
using System.Collections.Generic;
using Quick.Site.Common.Models;
using Ecomm.Domain.Models.SysConfig;


namespace Ecomm.Core.Service.SysConfig.Impl
{
	/// <summary>
    /// 服务层实现 —— OperateLogService
    /// </summary>
    [Export(typeof(IOperateLogService))]
    public class OperateLogService : CoreServiceBase, IOperateLogService
	{
		#region 属性

		[Import]
        public IOperateLogRepository OperateLogRepository { get; set; }

        public IQueryable<OperateLog> OperateLogs
        {
            get { return OperateLogRepository.Entities; }
        }

		#endregion

		#region 公共方法

        public OperationResult Insert(OperateLogModel model)
        {
            var entity = new OperateLog
            {
				Area = model.Area,
				Controller = model.Controller,
				Action = model.Action,
				Description = model.Description,
				IPAddress = model.IPAddress,
				LoginName = model.LoginName,
				UserId = model.UserId,
				LogTime = model.LogTime
            };
            OperateLogRepository.Insert(entity);
            return new OperationResult(OperationResultType.Success, "添加成功");
        }

        public OperationResult Delete()
        {
			var entities = OperateLogRepository.Entities.Where(t => t.IsDeleted == false);
			foreach (var entity in entities)
			{
				entity.IsDeleted = true;
				OperateLogRepository.Update(entity);
			}		
            return new OperationResult(OperationResultType.Success, "删除成功");
		}

		#endregion
	}
}
